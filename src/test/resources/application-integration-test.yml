spring:
  data:
    r2dbc:
      repositories:
        enabled: true

  r2dbc:
    url: r2dbc:postgresql://${embedded.postgresql.host}:${embedded.postgresql.port}/${embedded.postgresql.schema}
    pool:
      enabled: true
      initial-size: 10
    username: ${embedded.postgresql.user}
    password: ${embedded.postgresql.password}

  liquibase:
    url: jdbc:postgresql://${embedded.postgresql.host}:${embedded.postgresql.port}/${embedded.postgresql.schema}
    user: ${embedded.postgresql.user}
    password: ${embedded.postgresql.password}
  datasource:
    url: jdbc:postgresql://${embedded.postgresql.host}:${embedded.postgresql.port}/${embedded.postgresql.schema}
    username: ${embedded.postgresql.user}
    password: ${embedded.postgresql.password}

  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.BytesDeserializer
      properties:
        spring.json.trusted.packages: "*"

    bootstrap-servers: ${embedded.kafka.brokerList}