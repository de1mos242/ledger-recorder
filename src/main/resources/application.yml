spring:
  data:
    r2dbc:
      repositories:
        enabled: true

  r2dbc:
    url: r2dbc:postgresql://localhost:15432/ledger-recorder
    pool:
      enabled: true
      initial-size: 10
    username: postgres

  liquibase:
    url: jdbc:postgresql://localhost:15432/ledger-recorder
    user: postgres
  datasource:
    url: jdbc:postgresql://localhost:15432/ledger-recorder
    username: postgres

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9494/auth/realms/t1
          jwk-set-uri: http://localhost:9494/auth/realms/t1/protocol/openid-connect/certs

  cloud:
    stream:
      bindings:
        process-in-0:
          destination: lg-accounting.public.a2u_events
          consumer:
            value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
            valueSerde: io.debezium.serde.DebeziumSerdes


  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.BytesDeserializer
      properties:
        spring.json.trusted.packages: "*"

    bootstrap-servers: localhost:9094
